<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- localhost:8080/{context root}/resources/{하위 모든 폴더 경로}로 요청할 경우 정적 자원(resource)을 응답하는 경로 -->
	<!-- 동적인 처리가 필요하지 않기 때문에 별도의 서블릿인 DispatcherServlet을 거치지 않고 웹 서버 단에서 응답 -->
	<!-- http://localhost:8080/resources/style.css 테스트 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- 
	InternalResourceViewResolver.java
	Controller 클래스로부터 응답받은 View 정보를 DispatcherServlet에게 전달받아 정보에 맞는 View 파일이 위치한 경로를 제공하는 클래스
	ViewResolver에게 "index"라는 문자열을 전달할 경우 접두사와 접미사를 문자열 앞 뒤에 추가하여 실제 경로를 제공함 "/WEB-INF/views/" + "index" + ".jsp"     
	-->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 컴포넌트 스캔 대상에 포함될 기본 패키지 경로(base package) -->
	<context:component-scan base-package="dev.mvc.spring" />
	
</beans:beans>
